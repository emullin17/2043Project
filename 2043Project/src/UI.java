/**
 *
 * @author nmack
 */
import java.awt.CardLayout;
import java.awt.Color;

public class UI extends javax.swing.JFrame {
    @SuppressWarnings("compatibility:2647264885859345639")
    private static final long serialVersionUID = 1L;

    /** Creates new form UI */
    public UI() {
        initComponents();
    }
 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private String service = "Spotify", mood = "Joyous"; 
    private boolean[] answers = new boolean[5];
    private int questionNumber = 0, maxQuestions = 5;
    private boolean bgb = true;
        
    private void initComponents() {//GEN-BEGIN:initComponents

        cards = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Brightness1 = new javax.swing.JButton();
        background1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mood4 = new javax.swing.JButton();
        mood2 = new javax.swing.JButton();
        mood6 = new javax.swing.JButton();
        mood1 = new javax.swing.JButton();
        mood5 = new javax.swing.JButton();
        mood3 = new javax.swing.JButton();
        background2 = new javax.swing.JLabel();
        Brightness2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Brightness3 = new javax.swing.JButton();
        background3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextArea4 = new javax.swing.JTextArea();
        Brightness4 = new javax.swing.JButton();
        background4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 400, 300));
        setMinimumSize(new java.awt.Dimension(400, 300));

        cards.setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("                     Select a Service                    ");
        jLabel1.setAutoscrolls(true);
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setFocusable(false);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(100, 80, 200, 14);

        jButton1.setText("Netflix");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(100, 199, 75, 21);

        jButton2.setText("Spotify");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(225, 199, 75, 21);

        Brightness1.setText("Light/Dark");
        Brightness1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Brightness1ActionPerformed(evt);
            }
        });
        jPanel1.add(Brightness1);
        Brightness1.setBounds(0, 280, 70, 21);

        background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgb.jpg"))); // NOI18N
        jPanel1.add(background1);
        background1.setBounds(0, 0, 410, 300);

        cards.add(jPanel1, "card5");

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("                                        Select a Mood                                 ");
        jLabel2.setToolTipText("");

        mood4.setText("Joyous");
        mood4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mood4ActionPerformed(evt);
            }
        });

        mood2.setText("Grieved");
        mood2.setMaximumSize(new java.awt.Dimension(52, 21));
        mood2.setMinimumSize(new java.awt.Dimension(52, 21));
        mood2.setPreferredSize(new java.awt.Dimension(52, 21));
        mood2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mood2ActionPerformed(evt);
            }
        });

        mood6.setText("Lugubrious");
        mood6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mood6ActionPerformed(evt);
            }
        });

        mood1.setText("Bored");
        mood1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mood1ActionPerformed(evt);
            }
        });

        mood5.setText("Shocked");
        mood5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mood5ActionPerformed(evt);
            }
        });

        mood3.setText("Confused");
        mood3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mood3ActionPerformed(evt);
            }
        });

        background2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgb.jpg"))); // NOI18N

        Brightness2.setText("Light/Dark");
        Brightness2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Brightness2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mood1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mood4, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mood5, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(mood2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(mood3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(mood6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(52, 52, 52))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Brightness2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(background2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mood1)
                    .addComponent(mood2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mood3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mood4)
                    .addComponent(mood5)
                    .addComponent(mood6))
                .addGap(59, 59, 59)
                .addComponent(Brightness2))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(background2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );

        cards.add(jPanel2, "card3");

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jButton5.setText("Yes");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("No");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Question 1");

        Brightness3.setText("Light/Dark");
        Brightness3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Brightness3ActionPerformed(evt);
            }
        });

        background3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgb.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(Brightness3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(100, 100, 100))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(background3)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addGap(59, 59, 59)
                .addComponent(Brightness3))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(background3)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        cards.add(jPanel3, "card4");

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        jTextArea4.setColumns(20);
        jTextArea4.setRows(4);
        jTextArea4.setTabSize(5);
        jTextArea4.setText("Reccomendations:\nLink\nLink\nLink");
        jTextArea4.setMinimumSize(new java.awt.Dimension(93, 60));

        Brightness4.setText("Light/Dark");
        Brightness4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Brightness4ActionPerformed(evt);
            }
        });

        background4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgb.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(jTextArea4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(Brightness4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(background4)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jTextArea4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(Brightness4))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(background4)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        cards.add(jPanel4, "card5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleName("jFrame0");

        pack();
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        service = jButton1.getText();
        ((CardLayout)(cards.getLayout ())).show (cards, "card3");
        mood1.setText("Excited");
        mood2.setText("Emotional");
        mood3.setText("Content");
        mood4.setText("Upset");
        mood5.setText("Bored");
        mood6.setText("Adventurous");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        service = jButton2.getText();
        ((CardLayout)(cards.getLayout ())).show (cards, "card3");
        mood1.setText("Excited");
        mood2.setText("Emotional");
        mood3.setText("Content");
        mood4.setText("Upset");
        mood5.setText("Nostalgic");
        mood6.setText("Chill");
        
    }//GEN-LAST:event_jButton2ActionPerformed



    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        answers[questionNumber] = true;
        questionNumber ++;
        if (questionNumber >= maxQuestions) {
            ((CardLayout)(cards.getLayout ())).show (cards, "card5");
        }
        else{
            String q = nextQuestion();
            jLabel3.setText(q);
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        answers[questionNumber] = false;
        questionNumber ++;
        if (questionNumber >= maxQuestions) {
            ((CardLayout)(cards.getLayout ())).show (cards, "card5");
        }
        else{
            String q = nextQuestion();
            jLabel3.setText(q);
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed



    private void mood3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mood3ActionPerformed
        // TODO add your handling code here:
        mood = mood3.getText();
        jLabel3.setText(nextQuestion());
        ((CardLayout)(cards.getLayout ())).show (cards, "card4");

    }//GEN-LAST:event_mood3ActionPerformed

    private void mood5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mood5ActionPerformed
        // TODO add your handling code here:
        mood = mood5.getText();
        jLabel3.setText(nextQuestion());
        ((CardLayout)(cards.getLayout ())).show (cards, "card4");

    }//GEN-LAST:event_mood5ActionPerformed

    private void mood1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mood1ActionPerformed
        // TODO add your handling code here:
        mood = mood1.getText();
        jLabel3.setText(nextQuestion());
        ((CardLayout)(cards.getLayout ())).show (cards, "card4");

    }//GEN-LAST:event_mood1ActionPerformed

    private void mood6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mood6ActionPerformed
        // TODO add your handling code here:
        mood = mood6.getText();
        jLabel3.setText(nextQuestion());
        ((CardLayout)(cards.getLayout ())).show (cards, "card4");

    }//GEN-LAST:event_mood6ActionPerformed

    private void mood2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mood2ActionPerformed
        // TODO add your handling code here:
        mood = mood2.getText();
        jLabel3.setText(nextQuestion());
        ((CardLayout)(cards.getLayout ())).show (cards, "card4");
        
    }//GEN-LAST:event_mood2ActionPerformed

    private void mood4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mood4ActionPerformed
        // TODO add your handling code here:
        mood = mood4.getText();
        jLabel3.setText(nextQuestion());
        ((CardLayout)(cards.getLayout ())).show (cards, "card4");
        
    }//GEN-LAST:event_mood4ActionPerformed

    private void Brightness1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Brightness1ActionPerformed

        if (bgb) {
            jLabel1.setForeground(new Color(0,0,0));
            background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgw.jpg")));
            bgb = false;
        }
        else{
            jLabel1.setForeground(new Color(255,255,255));
            background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgb.jpg")));
            bgb = true;
        }
        
    }//GEN-LAST:event_Brightness1ActionPerformed

    private void Brightness2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Brightness2ActionPerformed
        
        if (bgb) {
            jLabel2.setForeground(new Color(0,0,0));
            background2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgw.jpg")));
            bgb = false;
        }
        else{
            jLabel2.setForeground(new Color(255,255,255));
            background2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgb.jpg")));
            bgb = true;
        }
        
    }//GEN-LAST:event_Brightness2ActionPerformed

    private void Brightness3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Brightness3ActionPerformed
        
        if (bgb) {
            jLabel3.setForeground(new Color(0,0,0));
            background3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgw.jpg")));
            bgb = false;
        }
        else{
            jLabel3.setForeground(new Color(255,255,255));
            background3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgb.jpg")));
            bgb = true;
        }
        
    }//GEN-LAST:event_Brightness3ActionPerformed

    private void Brightness4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Brightness4ActionPerformed
        
        if (bgb) {
            jTextArea4.setForeground(new Color(0, 0, 0));
            jTextArea4.setBackground(new Color(255, 255, 255));
            background4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgw.jpg")));
            bgb = false;
        } else {
            jTextArea4.setForeground(new Color(255, 255, 255));
            jTextArea4.setBackground(new Color(0, 0, 0));
            background4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2043Project/src/bgb.jpg")));
            bgb = true;
        }
        
    }//GEN-LAST:event_Brightness4ActionPerformed

    public String nextQuestion(){
        String res = "";
        int nextQ = 0;
        if (service == "Spotify"){
            if (mood == "Nostalgic"){
                switch (questionNumber){
                case 0: 
                    nextQ = 1;
                    break;
                case 1:
                    nextQ = 2;
                    break;
                case 2:
                    if (answers[0]){
                        if (answers[1]){        
                            nextQ = 3;
                        }
                        else{
                            nextQ = 6;
                        }
                    }
                    else{
                        if (answers[1]){        
                            nextQ = 8;
                        }
                        else{
                            nextQ = 6;
                        }
                    }
                    break;
                case 3:
                    if (answers[0]){        
                        nextQ = 4;
                    }
                    else{
                        nextQ = 9;
                    }
                    break;
                case 4:
                    if (((answers[0] && (!answers[1])) && answers[2]) || (((!answers[0]) && (!answers[1])) && answers[2])){        
                        nextQ = 7;
                    }
                    else{
                        nextQ = 5;
                    }
                    break;
                }

                switch (nextQ) {
                case 1:
                    res = "Were you born before 1980?";
                    break;
                case 2:
                    res = "Do you enjoy pop music?";
                    break;
                case 3:
                    res = "Do you enjoy ballads";
                    break;
                case 4:
                    res = "Do you enjoy songs from the 80's?";
                    break;
                case 5:
                    res = "Do you want uplifting music?";
                    break;
                case 6:
                    res = "Do you enjoy rock music?";
                    break;
                case 7:
                    res = "Are you feeling angry or angsty?";
                    break;
                case 8:
                    res = "Do you enjoy R&B / rap?";
                    break;
                case 9:
                    res = "Do you enjoy songs from the 90's?";
                    break;
                }
            }
            else{
                res = ("Question " + questionNumber);
            }
        }
        else if(service == "Netflix"){
            if (mood == "Upset"){
                switch (questionNumber){
                case 0: 
                    nextQ = 1;
                    break;
                case 1:
                    if (answers[0]){
                        nextQ = 2;
                    }
                    else{
                        nextQ = 14;
                    }
                    break;
                case 2:
                    if (answers[0]){
                        if (answers[1]){        
                            nextQ = 10;
                        }
                        else{
                            nextQ = 3;
                        }
                    }
                    else{
                        if (answers[1]){        
                            nextQ = 16;
                        }
                        else{
                            nextQ = 15;
                        }
                    }
                    break;
                case 3:
                    if (answers[0]){        
                        if (answers[1]){        
                            nextQ = 11;
                        }
                        else{
                            if (answers[2]){        
                                nextQ = 4;
                            }
                            else{
                                nextQ = 5;
                            }
                        }
                    }
                    else{
                        if (answers[1]){        
                            if (answers[2]){        
                                nextQ = 18;
                                maxQuestions = 4;
                            }
                            else{
                                nextQ = 19;
                                maxQuestions = 4;
                            }
                        }
                        else{
                            nextQ = 16;
                        }
                    }
                    break;
                case 4:
                    if (answers[0]){        
                        if (answers[1]){        
                            if (answers[3]){        
                                nextQ = 13;
                            }
                            else{
                                nextQ = 12;
                            }
                        }
                        else{
                            if (answers[2]){        
                                if (answers[3]){        
                                    nextQ = 6;
                                }
                                else{
                                    nextQ = 7;
                                }
                            }
                            else{
                                if (answers[3]){        
                                    nextQ = 8;
                                }
                                else{
                                    nextQ = 9;
                                }
                            }
                        }
                    }
                    else{
                        if (answers[2]){        
                            if (answers[3]){        
                                nextQ = 19;
                            }
                            else{
                                nextQ = 18;
                            }
                        }
                        else{
                            if (answers[3]){        
                                nextQ = 18;
                            }
                            else{
                                nextQ = 18;
                                maxQuestions = 4;
                                ((CardLayout)(cards.getLayout ())).show (cards, "card5");
                            }
                        }
                    }
                    break;
                }
                
                switch (nextQ) {
                case 1:
                    res = "Do you want to be cheered up?";
                    break;
                case 2:
                    res = "Do you enjoy rom-coms?";
                    break;
                case 3:
                    res = "Do you enjoy fairy-tale movies";
                    break;
                case 4:
                    res = "Do you enjoy animated movies?";
                    break;
                case 5:
                    res = "Do you enjoy sit-coms?";
                    break;
                case 6:
                    res = "Do you enjoy disney princesses?";
                    break;
                case 7:
                    res = "Do you want to laugh?";
                    break;
                case 8:
                    res = "Do you hate laugh tracks?";
                    break;
                case 9:
                    res = "Do you enjoy feel-good movies";
                    break;
                case 10:
                    res = "Do you enjoy musicals";
                    break;
                case 11:
                    res = "Do you want a happy ending?";
                    break;
                case 12:
                    res = "Do you enjoy an open ending?";
                    break;
                case 13:
                    res = "Do you want christmas movies";
                    break;
                case 14:
                    res = "Do you enjoy romance movies?";
                    break;
                case 15:
                    res = "Do you enjoy dramas?";
                    break;
                case 16:
                    res = "Do you enjoy tragedys?";
                    break;
                case 18:
                    res = "Do you enjoy historical movies?";
                    break;
                case 19:
                    res = "Are you 18+?";
                    break;
                }
            }
            else{
                res = ("Question " + questionNumber);
            }
            
        }
        else{
            res = "Error";
        }
        return res;
    }
    
    public String getlink(){
        String link = "";
        int ansNum = 0;
        if (!answers[0]){
            ansNum += 16;
        }
        if (!answers[1]){
            ansNum += 8;
        }
        if (!answers[2]){
            ansNum += 4;
        }
        if (!answers[3]){
            ansNum += 2;
        }
        if (!answers[4]){
            ansNum += 1;
        }
        if (service == "Spotify"){
            if (mood == "Nostalgic"){
                switch (ansNum){
                case 0:
                    link = "https://open.spotify.com/playlist/1IL0MhRvKPfbY5ydtfhgPx";
                    break;
                case 1:
                    link = "https://open.spotify.com/playlist/5N2QcBRLhUuPVHPul2Ixo1";
                    break;
                case 2:
                    link = "https://open.spotify.com/playlist/3XNjv8oBijpRzwUJGnLMcG";
                    break;
                case 3:
                    link = "https://open.spotify.com/playlist/403B1q712uhUklG9YDSHJx";
                    break;
                case 4:
                    link = "https://open.spotify.com/playlist/37i9dQZF1DX4UtSsGT1Sbe";
                    break;
                case 5:
                    link = " https://open.spotify.com/playlist/1gHRy2iKi98RvDI4x04lAY";
                    break;
                case 6:
                    link = "https://open.spotify.com/playlist/37i9dQZF1DWTJ7xPn4vNaz";
                    break;
                case 7:
                    link = "https://open.spotify.com/playlist/3WweQ4irQjTALRyqDhBHwy";
                    break;
                case 8:
                    link = "https://open.spotify.com/playlist/5zPi4I5lXSqcR2QBBpOFH9";
                    break;
                case 9:
                    link = "https://open.spotify.com/playlist/05s0l2KgsETYbzuQHAxmli";
                    break;
                case 10:
                    link = "https://open.spotify.com/album/1PFT53HYdmVZel3CZBwG2E";
                    break;
                case 11:
                    link = "https://open.spotify.com/playlist/5RkXZzyPCKrovrl1XF92vo";
                    break;
                case 12:
                    link = "https://open.spotify.com/playlist/5XtxWMA59OUxSdJ7KuolHv";
                    break;
                case 13:
                    link = "https://open.spotify.com/playlist/7a1xivxbS2IUmDs6sE3l8T";
                    break;
                case 14:
                    link = "https://open.spotify.com/playlist/5nuiBAmQMTs7ke5Lk3liMG";
                    break;
                case 15:
                    link = "https://open.spotify.com/playlist/33soTRv4WXmLv4HxCgY6eQv";
                    break;
                case 16:
                    link = "https://open.spotify.com/playlist/2Ev5qFPB7T5PlKp2lyxxHS";
                    break;
                case 17:
                    link = "https://open.spotify.com/playlist/5nNVCecF8ltyJJ8EROjlIu";
                    break;
                case 18:
                    link = "https://open.spotify.com/playlist/2M3OQonxZ2MhKFEifQBkds";
                    break;
                case 19:
                    link = "https://open.spotify.com/playlist/5y4CWB2TPNGfeiTcc2LiBK";
                    break;
                case 20:
                    link = "https://open.spotify.com/playlist/37i9dQZF1DXbTxeAdrVG2l";
                    break;
                case 21:
                    link = "https://open.spotify.com/playlist/5Kar9ubIBpXecVyV9kEz1d";
                    break;
                case 22:
                    link = "https://open.spotify.com/playlist/37i9dQZF1DX4o1oenSJRJd";
                    break;
                case 23:
                    link = "https://open.spotify.com/playlist/3iV4ZqhZmtyhORAAZS2dqR";
                    break;
                case 24:
                    link = "https://open.spotify.com/playlist/0JUlyXSy79Glv5RAqaMX22";
                    break;
                case 25:
                    link = "https://open.spotify.com/playlist/2MTatPQetkXpe9jsBVsIwb";
                    break;
                case 26:
                    link = "https://open.spotify.com/playlist/6K1M7n7RmDa3wqDTaGv4uR";
                    break;
                case 27:
                    link = "https://open.spotify.com/playlist/2PkJ5gKXy0DTsC1NoPREKq";
                    break;
                case 28:
                    link = "https://open.spotify.com/playlist/6Eyc4qnnEM2QNd5uswK96E";
                    break;
                case 29:
                    link = "https://open.spotify.com/playlist/3u9pTKTQY6bphXy20LPZjg";
                    break;
                case 30:
                    link = "https://open.spotify.com/playlist/26MW2euiWghblyEqXGpQ0U";
                    break;
                case 31:
                    link = "https://open.spotify.com/playlist/0uxWvglcNYX7hJv1851hnr";
                    break;
                }
                
            }
            else{
                link = "link";
            }
        }
        return link;    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(UI.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(UI.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(UI.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(UI.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new UI().setVisible(true);
                }
            });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Brightness1;
    private javax.swing.JButton Brightness2;
    private javax.swing.JButton Brightness3;
    private javax.swing.JButton Brightness4;
    private javax.swing.JLabel background1;
    private javax.swing.JLabel background2;
    private javax.swing.JLabel background3;
    private javax.swing.JLabel background4;
    private javax.swing.JPanel cards;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JButton mood1;
    private javax.swing.JButton mood2;
    private javax.swing.JButton mood3;
    private javax.swing.JButton mood4;
    private javax.swing.JButton mood5;
    private javax.swing.JButton mood6;
    // End of variables declaration//GEN-END:variables

}
